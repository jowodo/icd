#!/bin/bash

function icd(){
	# todo
	# -h help 
	# -s secret dirs 
	# icd ~$USER

HELPTEXT="USAGE: icd [-h|--help] [-v|--verbose] [-l|.|--local] [keyword]\n\n
\t-h|--help\tshow this help text and exit\n
\t-v|--verbose\tshow path of destination directory\n
\t-vv|--veryverbose\tdestination directory\n
\t-m|--map\tmap home filesystem and print to standard out and exit\n
\t-f|--follow\tfollow symbolic links (recommended for mapping)\n
\t-\tgo to previous directory\n
\t-l|.|--local\tstart search at current directory"

# PARSER + SET FLAGS
################################################################
POSITIONAL=()
VERBOSE=FALSE
VERYVERBOSE=FALSE
LOCAL=FALSE
MAPPING=FALSE
FOLLOW=""
START=~
DESTINATION=""
FOUND=""
#HIDDEN="-not -path '*/\.*'"

while [[ $# -gt 0 ]]
do
	key="$1"

	case $key in
#		-s|--secret)
#			HIDDEN=""
#			shift # past argument
#			;;
		.|-l|--local)
			START=$(pwd)
			shift # past argument
			;;
		-f|--follow)
			FOLLOW=-L
			shift # past argument
			;;
		-m|--map)
			MAPPING=TRUE
			shift # past argument
			;;
		-v|--verbose)
			VERBOSE=TRUE
			shift # past argument
			;;
		-vv|--veryverbose)
			VERYVERBOSE=TRUE
			shift # past argument
			;;
		-)
			cd - && return 0;; 
		-h|--help)
			echo -e $HELPTEXT && return 0;; 
		*)    # unknown option
			POSITIONAL+=("$1") # save it in an array for later
			shift # past argument
			;;
	esac
	done
	set -- "${POSITIONAL[@]}" # restore positional parameters
	if [[ ${#POSITIONAL[@]} -gt 1 ]]
	then 
		echo "Too many arguments!"
		echo -e $HELPTEXT
		return 0
	fi
	FINDARGUMENT=${POSITIONAL[0]}

# FIND DIR
################################################################
if [[ $MAPPING == TRUE ]]; then 
	echo "$( find $FOLLOW $START -not -path '*/\.*' -type d -iwholename "*${FINDARGUMENT%/}*")" 
else
	#CHECKING MAP-FILES
	MAPRESULTS=$(grep -i $FINDARGUMENT $HOME/.icd/[0-9]* | awk '{ split($0,a,":") ;print length(a[2]), $0}' | sort | head -n1 | cut -d" " -f2-)
	FOUNDIN=${MAPRESULTS%:*}
	DESTINATION=${MAPRESULTS#*:}

	if [[ $DESTINATION = "" ]]; then  #echo "do search"; else  echo "use this $d"; fi 

		#DESTINATION="$( find $FOLLOW $START $HIDDEN -type d \
		DESTINATION="$( find $FOLLOW $START -not -path '*/\.*' -type d \
			-iwholename "*${FINDARGUMENT%/}*" | \
			awk '{ print length, $0 }' | \
			sort -n | \
			cut -d" " -f2- | \
			head - -n 1 | \
			sed -e 's/ /\\ /')"
			FOUNDIN="active search"
	fi	

	if [[ $VERBOSE = TRUE ]]; then
		echo "$DESTINATION"
	fi
	if [[ $VERYVERBOSE = TRUE ]]; then 
		echo "$DESTINATION found from $FOUNDIN"
	fi
	# CHANGE DIR	
	############################################################
	cd $DESTINATION
fi 
}

